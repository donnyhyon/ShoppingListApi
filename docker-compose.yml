networks:
  web-db-compose:
services:
  api-app:
    image: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - web-db-compose
    depends_on:
      db:
        condition: service_healthy

  db:
    image: db
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=shoppinglist-api-db
    networks:
      - web-db-compose
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d shoppinglist-api-db"]
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 2s

  front-end:
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      - REACT_APP_API_URL=api-app
    volumes:
      - ./frontend:/webapp
    networks:
      - web-db-compose
    depends_on:
    - api-app


  

